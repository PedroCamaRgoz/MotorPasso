

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Thu Jun 03 20:52:49 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    19                           	dabs	1,0x7E,2
    20  0000                     
    21                           ; Version 2.20
    22                           ; Generated 12/02/2020 GMT
    23                           ; 
    24                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC16F887 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55  0000                     	;# 
    56  0001                     	;# 
    57  0002                     	;# 
    58  0003                     	;# 
    59  0004                     	;# 
    60  0005                     	;# 
    61  0006                     	;# 
    62  0007                     	;# 
    63  0008                     	;# 
    64  0009                     	;# 
    65  000A                     	;# 
    66  000B                     	;# 
    67  000C                     	;# 
    68  000D                     	;# 
    69  000E                     	;# 
    70  000E                     	;# 
    71  000F                     	;# 
    72  0010                     	;# 
    73  0011                     	;# 
    74  0012                     	;# 
    75  0013                     	;# 
    76  0014                     	;# 
    77  0015                     	;# 
    78  0015                     	;# 
    79  0016                     	;# 
    80  0017                     	;# 
    81  0018                     	;# 
    82  0019                     	;# 
    83  001A                     	;# 
    84  001B                     	;# 
    85  001B                     	;# 
    86  001C                     	;# 
    87  001D                     	;# 
    88  001E                     	;# 
    89  001F                     	;# 
    90  0081                     	;# 
    91  0085                     	;# 
    92  0086                     	;# 
    93  0087                     	;# 
    94  0088                     	;# 
    95  0089                     	;# 
    96  008C                     	;# 
    97  008D                     	;# 
    98  008E                     	;# 
    99  008F                     	;# 
   100  0090                     	;# 
   101  0091                     	;# 
   102  0092                     	;# 
   103  0093                     	;# 
   104  0093                     	;# 
   105  0093                     	;# 
   106  0094                     	;# 
   107  0095                     	;# 
   108  0096                     	;# 
   109  0097                     	;# 
   110  0098                     	;# 
   111  0099                     	;# 
   112  009A                     	;# 
   113  009B                     	;# 
   114  009C                     	;# 
   115  009D                     	;# 
   116  009E                     	;# 
   117  009F                     	;# 
   118  0105                     	;# 
   119  0107                     	;# 
   120  0108                     	;# 
   121  0109                     	;# 
   122  010C                     	;# 
   123  010C                     	;# 
   124  010D                     	;# 
   125  010E                     	;# 
   126  010F                     	;# 
   127  0185                     	;# 
   128  0187                     	;# 
   129  0188                     	;# 
   130  0189                     	;# 
   131  018C                     	;# 
   132  018D                     	;# 
   133  0000                     	;# 
   134  0001                     	;# 
   135  0002                     	;# 
   136  0003                     	;# 
   137  0004                     	;# 
   138  0005                     	;# 
   139  0006                     	;# 
   140  0007                     	;# 
   141  0008                     	;# 
   142  0009                     	;# 
   143  000A                     	;# 
   144  000B                     	;# 
   145  000C                     	;# 
   146  000D                     	;# 
   147  000E                     	;# 
   148  000E                     	;# 
   149  000F                     	;# 
   150  0010                     	;# 
   151  0011                     	;# 
   152  0012                     	;# 
   153  0013                     	;# 
   154  0014                     	;# 
   155  0015                     	;# 
   156  0015                     	;# 
   157  0016                     	;# 
   158  0017                     	;# 
   159  0018                     	;# 
   160  0019                     	;# 
   161  001A                     	;# 
   162  001B                     	;# 
   163  001B                     	;# 
   164  001C                     	;# 
   165  001D                     	;# 
   166  001E                     	;# 
   167  001F                     	;# 
   168  0081                     	;# 
   169  0085                     	;# 
   170  0086                     	;# 
   171  0087                     	;# 
   172  0088                     	;# 
   173  0089                     	;# 
   174  008C                     	;# 
   175  008D                     	;# 
   176  008E                     	;# 
   177  008F                     	;# 
   178  0090                     	;# 
   179  0091                     	;# 
   180  0092                     	;# 
   181  0093                     	;# 
   182  0093                     	;# 
   183  0093                     	;# 
   184  0094                     	;# 
   185  0095                     	;# 
   186  0096                     	;# 
   187  0097                     	;# 
   188  0098                     	;# 
   189  0099                     	;# 
   190  009A                     	;# 
   191  009B                     	;# 
   192  009C                     	;# 
   193  009D                     	;# 
   194  009E                     	;# 
   195  009F                     	;# 
   196  0105                     	;# 
   197  0107                     	;# 
   198  0108                     	;# 
   199  0109                     	;# 
   200  010C                     	;# 
   201  010C                     	;# 
   202  010D                     	;# 
   203  010E                     	;# 
   204  010F                     	;# 
   205  0185                     	;# 
   206  0187                     	;# 
   207  0188                     	;# 
   208  0189                     	;# 
   209  018C                     	;# 
   210  018D                     	;# 
   211  0000                     	;# 
   212  0001                     	;# 
   213  0002                     	;# 
   214  0003                     	;# 
   215  0004                     	;# 
   216  0005                     	;# 
   217  0006                     	;# 
   218  0007                     	;# 
   219  0008                     	;# 
   220  0009                     	;# 
   221  000A                     	;# 
   222  000B                     	;# 
   223  000C                     	;# 
   224  000D                     	;# 
   225  000E                     	;# 
   226  000E                     	;# 
   227  000F                     	;# 
   228  0010                     	;# 
   229  0011                     	;# 
   230  0012                     	;# 
   231  0013                     	;# 
   232  0014                     	;# 
   233  0015                     	;# 
   234  0015                     	;# 
   235  0016                     	;# 
   236  0017                     	;# 
   237  0018                     	;# 
   238  0019                     	;# 
   239  001A                     	;# 
   240  001B                     	;# 
   241  001B                     	;# 
   242  001C                     	;# 
   243  001D                     	;# 
   244  001E                     	;# 
   245  001F                     	;# 
   246  0081                     	;# 
   247  0085                     	;# 
   248  0086                     	;# 
   249  0087                     	;# 
   250  0088                     	;# 
   251  0089                     	;# 
   252  008C                     	;# 
   253  008D                     	;# 
   254  008E                     	;# 
   255  008F                     	;# 
   256  0090                     	;# 
   257  0091                     	;# 
   258  0092                     	;# 
   259  0093                     	;# 
   260  0093                     	;# 
   261  0093                     	;# 
   262  0094                     	;# 
   263  0095                     	;# 
   264  0096                     	;# 
   265  0097                     	;# 
   266  0098                     	;# 
   267  0099                     	;# 
   268  009A                     	;# 
   269  009B                     	;# 
   270  009C                     	;# 
   271  009D                     	;# 
   272  009E                     	;# 
   273  009F                     	;# 
   274  0105                     	;# 
   275  0107                     	;# 
   276  0108                     	;# 
   277  0109                     	;# 
   278  010C                     	;# 
   279  010C                     	;# 
   280  010D                     	;# 
   281  010E                     	;# 
   282  010F                     	;# 
   283  0185                     	;# 
   284  0187                     	;# 
   285  0188                     	;# 
   286  0189                     	;# 
   287  018C                     	;# 
   288  018D                     	;# 
   289  0000                     	;# 
   290  0001                     	;# 
   291  0002                     	;# 
   292  0003                     	;# 
   293  0004                     	;# 
   294  0005                     	;# 
   295  0006                     	;# 
   296  0007                     	;# 
   297  0008                     	;# 
   298  0009                     	;# 
   299  000A                     	;# 
   300  000B                     	;# 
   301  000C                     	;# 
   302  000D                     	;# 
   303  000E                     	;# 
   304  000E                     	;# 
   305  000F                     	;# 
   306  0010                     	;# 
   307  0011                     	;# 
   308  0012                     	;# 
   309  0013                     	;# 
   310  0014                     	;# 
   311  0015                     	;# 
   312  0015                     	;# 
   313  0016                     	;# 
   314  0017                     	;# 
   315  0018                     	;# 
   316  0019                     	;# 
   317  001A                     	;# 
   318  001B                     	;# 
   319  001B                     	;# 
   320  001C                     	;# 
   321  001D                     	;# 
   322  001E                     	;# 
   323  001F                     	;# 
   324  0081                     	;# 
   325  0085                     	;# 
   326  0086                     	;# 
   327  0087                     	;# 
   328  0088                     	;# 
   329  0089                     	;# 
   330  008C                     	;# 
   331  008D                     	;# 
   332  008E                     	;# 
   333  008F                     	;# 
   334  0090                     	;# 
   335  0091                     	;# 
   336  0092                     	;# 
   337  0093                     	;# 
   338  0093                     	;# 
   339  0093                     	;# 
   340  0094                     	;# 
   341  0095                     	;# 
   342  0096                     	;# 
   343  0097                     	;# 
   344  0098                     	;# 
   345  0099                     	;# 
   346  009A                     	;# 
   347  009B                     	;# 
   348  009C                     	;# 
   349  009D                     	;# 
   350  009E                     	;# 
   351  009F                     	;# 
   352  0105                     	;# 
   353  0107                     	;# 
   354  0108                     	;# 
   355  0109                     	;# 
   356  010C                     	;# 
   357  010C                     	;# 
   358  010D                     	;# 
   359  010E                     	;# 
   360  010F                     	;# 
   361  0185                     	;# 
   362  0187                     	;# 
   363  0188                     	;# 
   364  0189                     	;# 
   365  018C                     	;# 
   366  018D                     	;# 
   367  0000                     	;# 
   368  0001                     	;# 
   369  0002                     	;# 
   370  0003                     	;# 
   371  0004                     	;# 
   372  0005                     	;# 
   373  0006                     	;# 
   374  0007                     	;# 
   375  0008                     	;# 
   376  0009                     	;# 
   377  000A                     	;# 
   378  000B                     	;# 
   379  000C                     	;# 
   380  000D                     	;# 
   381  000E                     	;# 
   382  000E                     	;# 
   383  000F                     	;# 
   384  0010                     	;# 
   385  0011                     	;# 
   386  0012                     	;# 
   387  0013                     	;# 
   388  0014                     	;# 
   389  0015                     	;# 
   390  0015                     	;# 
   391  0016                     	;# 
   392  0017                     	;# 
   393  0018                     	;# 
   394  0019                     	;# 
   395  001A                     	;# 
   396  001B                     	;# 
   397  001B                     	;# 
   398  001C                     	;# 
   399  001D                     	;# 
   400  001E                     	;# 
   401  001F                     	;# 
   402  0081                     	;# 
   403  0085                     	;# 
   404  0086                     	;# 
   405  0087                     	;# 
   406  0088                     	;# 
   407  0089                     	;# 
   408  008C                     	;# 
   409  008D                     	;# 
   410  008E                     	;# 
   411  008F                     	;# 
   412  0090                     	;# 
   413  0091                     	;# 
   414  0092                     	;# 
   415  0093                     	;# 
   416  0093                     	;# 
   417  0093                     	;# 
   418  0094                     	;# 
   419  0095                     	;# 
   420  0096                     	;# 
   421  0097                     	;# 
   422  0098                     	;# 
   423  0099                     	;# 
   424  009A                     	;# 
   425  009B                     	;# 
   426  009C                     	;# 
   427  009D                     	;# 
   428  009E                     	;# 
   429  009F                     	;# 
   430  0105                     	;# 
   431  0107                     	;# 
   432  0108                     	;# 
   433  0109                     	;# 
   434  010C                     	;# 
   435  010C                     	;# 
   436  010D                     	;# 
   437  010E                     	;# 
   438  010F                     	;# 
   439  0185                     	;# 
   440  0187                     	;# 
   441  0188                     	;# 
   442  0189                     	;# 
   443  018C                     	;# 
   444  018D                     	;# 
   445  0000                     	;# 
   446  0001                     	;# 
   447  0002                     	;# 
   448  0003                     	;# 
   449  0004                     	;# 
   450  0005                     	;# 
   451  0006                     	;# 
   452  0007                     	;# 
   453  0008                     	;# 
   454  0009                     	;# 
   455  000A                     	;# 
   456  000B                     	;# 
   457  000C                     	;# 
   458  000D                     	;# 
   459  000E                     	;# 
   460  000E                     	;# 
   461  000F                     	;# 
   462  0010                     	;# 
   463  0011                     	;# 
   464  0012                     	;# 
   465  0013                     	;# 
   466  0014                     	;# 
   467  0015                     	;# 
   468  0015                     	;# 
   469  0016                     	;# 
   470  0017                     	;# 
   471  0018                     	;# 
   472  0019                     	;# 
   473  001A                     	;# 
   474  001B                     	;# 
   475  001B                     	;# 
   476  001C                     	;# 
   477  001D                     	;# 
   478  001E                     	;# 
   479  001F                     	;# 
   480  0081                     	;# 
   481  0085                     	;# 
   482  0086                     	;# 
   483  0087                     	;# 
   484  0088                     	;# 
   485  0089                     	;# 
   486  008C                     	;# 
   487  008D                     	;# 
   488  008E                     	;# 
   489  008F                     	;# 
   490  0090                     	;# 
   491  0091                     	;# 
   492  0092                     	;# 
   493  0093                     	;# 
   494  0093                     	;# 
   495  0093                     	;# 
   496  0094                     	;# 
   497  0095                     	;# 
   498  0096                     	;# 
   499  0097                     	;# 
   500  0098                     	;# 
   501  0099                     	;# 
   502  009A                     	;# 
   503  009B                     	;# 
   504  009C                     	;# 
   505  009D                     	;# 
   506  009E                     	;# 
   507  009F                     	;# 
   508  0105                     	;# 
   509  0107                     	;# 
   510  0108                     	;# 
   511  0109                     	;# 
   512  010C                     	;# 
   513  010C                     	;# 
   514  010D                     	;# 
   515  010E                     	;# 
   516  010F                     	;# 
   517  0185                     	;# 
   518  0187                     	;# 
   519  0188                     	;# 
   520  0189                     	;# 
   521  018C                     	;# 
   522  018D                     	;# 
   523                           
   524                           	psect	idataBANK0
   525  0627                     __pidataBANK0:
   526                           
   527                           ;initializer for _tecladoMatriz
   528  0627  3431               	retlw	49
   529  0628  3432               	retlw	50
   530  0629  3433               	retlw	51
   531  062A  3441               	retlw	65
   532  062B  3434               	retlw	52
   533  062C  3435               	retlw	53
   534  062D  3436               	retlw	54
   535  062E  3442               	retlw	66
   536  062F  3437               	retlw	55
   537  0630  3438               	retlw	56
   538  0631  3439               	retlw	57
   539  0632  3443               	retlw	67
   540  0633  342A               	retlw	42
   541  0634  3430               	retlw	48
   542  0635  3423               	retlw	35
   543  0636  3444               	retlw	68
   544                           
   545                           ;initializer for _half_step
   546  0637  3402               	retlw	2
   547  0638  3406               	retlw	6
   548  0639  3404               	retlw	4
   549  063A  3405               	retlw	5
   550  063B  3401               	retlw	1
   551  063C  3409               	retlw	9
   552  063D  3408               	retlw	8
   553  063E  340A               	retlw	10
   554                           
   555                           ;initializer for _double_step
   556  063F  3406               	retlw	6
   557  0640  3405               	retlw	5
   558  0641  3409               	retlw	9
   559  0642  340A               	retlw	10
   560                           
   561                           ;initializer for _complete_step
   562  0643  3402               	retlw	2
   563  0644  3404               	retlw	4
   564  0645  3401               	retlw	1
   565  0646  3408               	retlw	8
   566                           
   567                           	psect	nvBANK0
   568  004D                     __pnvBANK0:
   569  004D                     _ppr:
   570  004D                     	ds	2
   571  0008                     _PORTD	set	8
   572  0008                     _LCDbits	set	8
   573  0006                     _PORTB	set	6
   574  0095                     _WPUB	set	149
   575  0081                     _OPTION_REGbits	set	129
   576  0086                     _TRISB	set	134
   577  0088                     _TRISDbits	set	136
   578  0189                     _ANSELH	set	393
   579                           
   580                           	psect	cinit
   581  07ED                     start_initialization:	
   582                           ; #config settings
   583                           
   584  07ED                     __initialization:
   585                           
   586                           ; Initialize objects allocated to BANK0
   587  07ED  1383               	bcf	3,7	;select IRP bank0
   588  07EE  3040               	movlw	low (__pdataBANK0+32)
   589  07EF  00FD               	movwf	btemp+-1
   590  07F0  3006               	movlw	high __pidataBANK0
   591  07F1  00FE               	movwf	btemp
   592  07F2  3027               	movlw	low __pidataBANK0
   593  07F3  00FF               	movwf	btemp+1
   594  07F4  3020               	movlw	low __pdataBANK0
   595  07F5  0084               	movwf	4
   596  07F6  120A  118A  2603  120A  118A  	fcall	init_ram0
   597                           
   598                           ; Clear objects allocated to BANK0
   599  07FB  01CF               	clrf	__pbssBANK0& (0+127)
   600  07FC                     end_of_initialization:	
   601                           ;End of C runtime variable initialization code
   602                           
   603  07FC                     __end_of__initialization:
   604  07FC  0183               	clrf	3
   605  07FD  120A  118A  2E6C   	ljmp	_main	;jump to C main() function
   606                           
   607                           	psect	bssBANK0
   608  004F                     __pbssBANK0:
   609  004F                     _aux:
   610  004F                     	ds	1
   611                           
   612                           	psect	dataBANK0
   613  0020                     __pdataBANK0:
   614  0020                     _tecladoMatriz:
   615  0020                     	ds	16
   616  0030                     _half_step:
   617  0030                     	ds	8
   618  0038                     _double_step:
   619  0038                     	ds	4
   620  003C                     _complete_step:
   621  003C                     	ds	4
   622                           
   623                           	psect	inittext
   624  05FF                     init_fetch0:	
   625                           ;	Called with low address in FSR and high address in W
   626                           
   627  05FF  087E               	movf	btemp,w
   628  0600  008A               	movwf	10
   629  0601  087F               	movf	btemp+1,w
   630  0602  0082               	movwf	2
   631  0603                     init_ram0:	
   632                           ;Called with:
   633                           ;	high address of idata address in btemp 
   634                           ;	low address of idata address in btemp+1 
   635                           ;	low address of data in FSR
   636                           ;	high address + 1 of data in btemp-1
   637                           
   638  0603  120A  118A  25FF  120A  118A  	fcall	init_fetch0
   639  0608  0080               	movwf	0
   640  0609  0A84               	incf	4,f
   641  060A  0804               	movf	4,w
   642  060B  067D               	xorwf	btemp+-1,w
   643  060C  1903               	btfsc	3,2
   644  060D  3400               	retlw	0
   645  060E  0AFF               	incf	btemp+1,f
   646  060F  1903               	btfsc	3,2
   647  0610  0AFE               	incf	btemp,f
   648  0611  2E03               	goto	init_ram0
   649                           
   650                           	psect	cstackCOMMON
   651  0070                     __pcstackCOMMON:
   652  0070                     ?_motorpasso_init:
   653  0070                     ?_delay:	
   654                           ; 1 bytes @ 0x0
   655                           
   656  0070                     ?_main:	
   657                           ; 1 bytes @ 0x0
   658                           
   659  0070                     ?___wmul:	
   660                           ; 1 bytes @ 0x0
   661                           
   662  0070                     delay@t:	
   663                           ; 2 bytes @ 0x0
   664                           
   665  0070                     motorpasso_init@num:	
   666                           ; 2 bytes @ 0x0
   667                           
   668  0070                     ___wmul@multiplier:	
   669                           ; 2 bytes @ 0x0
   670                           
   671                           
   672                           ; 2 bytes @ 0x0
   673  0070                     	ds	2
   674  0072                     ??_motorpasso_init:
   675  0072                     ??_delay:	
   676                           ; 1 bytes @ 0x2
   677                           
   678  0072                     ___wmul@multiplicand:	
   679                           ; 1 bytes @ 0x2
   680                           
   681                           
   682                           ; 2 bytes @ 0x2
   683  0072                     	ds	2
   684  0074                     ??___wmul:
   685  0074                     ___wmul@product:	
   686                           ; 1 bytes @ 0x4
   687                           
   688                           
   689                           ; 2 bytes @ 0x4
   690  0074                     	ds	2
   691  0076                     ?___awdiv:
   692  0076                     ___awdiv@divisor:	
   693                           ; 2 bytes @ 0x6
   694                           
   695                           
   696                           ; 2 bytes @ 0x6
   697  0076                     	ds	2
   698  0078                     ___awdiv@dividend:
   699                           
   700                           ; 2 bytes @ 0x8
   701  0078                     	ds	2
   702  007A                     ??___awdiv:
   703                           
   704                           ; 1 bytes @ 0xA
   705  007A                     	ds	1
   706  007B                     ??_Motorpasso:
   707                           
   708                           ; 1 bytes @ 0xB
   709  007B                     	ds	2
   710                           
   711                           	psect	cstackBANK0
   712  0040                     __pcstackBANK0:
   713  0040                     ___awdiv@counter:
   714                           
   715                           ; 1 bytes @ 0x0
   716  0040                     	ds	1
   717  0041                     ___awdiv@sign:
   718                           
   719                           ; 1 bytes @ 0x1
   720  0041                     	ds	1
   721  0042                     ___awdiv@quotient:
   722                           
   723                           ; 2 bytes @ 0x2
   724  0042                     	ds	2
   725  0044                     ?_Motorpasso:
   726  0044                     Motorpasso@sentido:	
   727                           ; 1 bytes @ 0x4
   728                           
   729                           
   730                           ; 1 bytes @ 0x4
   731  0044                     	ds	1
   732  0045                     Motorpasso@graus:
   733                           
   734                           ; 2 bytes @ 0x5
   735  0045                     	ds	2
   736  0047                     Motorpasso@t:
   737                           
   738                           ; 1 bytes @ 0x7
   739  0047                     	ds	1
   740  0048                     Motorpasso@modo:
   741                           
   742                           ; 1 bytes @ 0x8
   743  0048                     	ds	1
   744  0049                     Motorpasso@passo:
   745                           
   746                           ; 1 bytes @ 0x9
   747  0049                     	ds	1
   748  004A                     Motorpasso@i:
   749                           
   750                           ; 1 bytes @ 0xA
   751  004A                     	ds	1
   752  004B                     ??_main:
   753                           
   754                           ; 1 bytes @ 0xB
   755  004B                     	ds	2
   756                           
   757                           	psect	maintext
   758  066C                     __pmaintext:	
   759 ;;
   760 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   761 ;;
   762 ;; *************** function _main *****************
   763 ;; Defined at:
   764 ;;		line 27 in file "main.c"
   765 ;; Parameters:    Size  Location     Type
   766 ;;		None
   767 ;; Auto vars:     Size  Location     Type
   768 ;;		None
   769 ;; Return value:  Size  Location     Type
   770 ;;                  1    wreg      void 
   771 ;; Registers used:
   772 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   773 ;; Tracked objects:
   774 ;;		On entry : B00/0
   775 ;;		On exit  : 0/0
   776 ;;		Unchanged: 0/0
   777 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   778 ;;      Params:         0       0       0       0       0
   779 ;;      Locals:         0       0       0       0       0
   780 ;;      Temps:          0       2       0       0       0
   781 ;;      Totals:         0       2       0       0       0
   782 ;;Total ram usage:        2 bytes
   783 ;; Hardware stack levels required when called: 2
   784 ;; This function calls:
   785 ;;		_Motorpasso
   786 ;;		_delay
   787 ;;		_motorpasso_init
   788 ;; This function is called by:
   789 ;;		Startup code after reset
   790 ;; This function uses a non-reentrant model
   791 ;;
   792                           
   793                           
   794                           ;psect for function _main
   795  066C                     _main:
   796  066C                     l1160:	
   797                           ;incstack = 0
   798                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   799                           
   800                           
   801                           ;main.c: 29:    motorpasso_init(4);
   802  066C  3004               	movlw	4
   803  066D  00F0               	movwf	motorpasso_init@num
   804  066E  3000               	movlw	0
   805  066F  00F1               	movwf	motorpasso_init@num+1
   806  0670  120A  118A  25F1  120A  118A  	fcall	_motorpasso_init
   807  0675                     l1162:
   808                           
   809                           ;main.c: 32:     {;main.c: 34:         Motorpasso(15,1,360,2000);
   810  0675  1283               	bcf	3,5	;RP0=0, select bank0
   811  0676  1303               	bcf	3,6	;RP1=0, select bank0
   812  0677  01C4               	clrf	Motorpasso@sentido
   813  0678  0AC4               	incf	Motorpasso@sentido,f
   814  0679  3068               	movlw	104
   815  067A  00C5               	movwf	Motorpasso@graus
   816  067B  3001               	movlw	1
   817  067C  00C6               	movwf	Motorpasso@graus+1
   818  067D  30D0               	movlw	208
   819  067E  00CB               	movwf	??_main
   820  067F  084B               	movf	??_main,w
   821  0680  00C7               	movwf	Motorpasso@t
   822  0681  300F               	movlw	15
   823  0682  120A  118A  271A  120A  118A  	fcall	_Motorpasso
   824  0687                     l1164:
   825                           
   826                           ;main.c: 35:         delay(3000);
   827  0687  30B8               	movlw	184
   828  0688  00F0               	movwf	delay@t
   829  0689  300B               	movlw	11
   830  068A  00F1               	movwf	delay@t+1
   831  068B  120A  118A  2612  120A  118A  	fcall	_delay
   832                           
   833                           ;main.c: 36:         Motorpasso(15,-1,360,2000);
   834  0690  30FF               	movlw	255
   835  0691  1283               	bcf	3,5	;RP0=0, select bank0
   836  0692  1303               	bcf	3,6	;RP1=0, select bank0
   837  0693  00CB               	movwf	??_main
   838  0694  084B               	movf	??_main,w
   839  0695  00C4               	movwf	Motorpasso@sentido
   840  0696  3068               	movlw	104
   841  0697  00C5               	movwf	Motorpasso@graus
   842  0698  3001               	movlw	1
   843  0699  00C6               	movwf	Motorpasso@graus+1
   844  069A  30D0               	movlw	208
   845  069B  00CC               	movwf	??_main+1
   846  069C  084C               	movf	??_main+1,w
   847  069D  00C7               	movwf	Motorpasso@t
   848  069E  300F               	movlw	15
   849  069F  120A  118A  271A  120A  118A  	fcall	_Motorpasso
   850  06A4                     l1166:
   851                           
   852                           ;main.c: 37:         delay(3000);
   853  06A4  30B8               	movlw	184
   854  06A5  00F0               	movwf	delay@t
   855  06A6  300B               	movlw	11
   856  06A7  00F1               	movwf	delay@t+1
   857  06A8  120A  118A  2612  120A  118A  	fcall	_delay
   858  06AD  2E75               	goto	l1162
   859  06AE  120A  118A  2800   	ljmp	start
   860  06B1                     __end_of_main:
   861                           
   862                           	psect	text1
   863  05F1                     __ptext1:	
   864 ;; *************** function _motorpasso_init *****************
   865 ;; Defined at:
   866 ;;		line 26 in file "stepMotor.c"
   867 ;; Parameters:    Size  Location     Type
   868 ;;  num             2    0[COMMON] int 
   869 ;; Auto vars:     Size  Location     Type
   870 ;;		None
   871 ;; Return value:  Size  Location     Type
   872 ;;                  1    wreg      void 
   873 ;; Registers used:
   874 ;;		wreg, status,2
   875 ;; Tracked objects:
   876 ;;		On entry : 0/0
   877 ;;		On exit  : 0/0
   878 ;;		Unchanged: 0/0
   879 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   880 ;;      Params:         2       0       0       0       0
   881 ;;      Locals:         0       0       0       0       0
   882 ;;      Temps:          0       0       0       0       0
   883 ;;      Totals:         2       0       0       0       0
   884 ;;Total ram usage:        2 bytes
   885 ;; Hardware stack levels used: 1
   886 ;; This function calls:
   887 ;;		Nothing
   888 ;; This function is called by:
   889 ;;		_main
   890 ;; This function uses a non-reentrant model
   891 ;;
   892                           
   893                           
   894                           ;psect for function _motorpasso_init
   895  05F1                     _motorpasso_init:
   896  05F1                     l1106:	
   897                           ;incstack = 0
   898                           ; Regs used in _motorpasso_init: [wreg+status,2]
   899                           
   900                           
   901                           ;stepMotor.c: 26: void motorpasso_init ( int num);stepMotor.c: 27: {;stepMotor.c: 28:   
      +                            TRISDbits.TRISD0 = 0;
   902  05F1  1683               	bsf	3,5	;RP0=1, select bank1
   903  05F2  1303               	bcf	3,6	;RP1=0, select bank1
   904  05F3  1008               	bcf	8,0	;volatile
   905                           
   906                           ;stepMotor.c: 29:     TRISDbits.TRISD1 = 0;
   907  05F4  1088               	bcf	8,1	;volatile
   908                           
   909                           ;stepMotor.c: 30:     TRISDbits.TRISD2 = 0;
   910  05F5  1108               	bcf	8,2	;volatile
   911                           
   912                           ;stepMotor.c: 31:     TRISDbits.TRISD3 = 0;
   913  05F6  1188               	bcf	8,3	;volatile
   914  05F7                     l1108:
   915                           
   916                           ;stepMotor.c: 34:     PORTD = 0;
   917  05F7  1283               	bcf	3,5	;RP0=0, select bank0
   918  05F8  1303               	bcf	3,6	;RP1=0, select bank0
   919  05F9  0188               	clrf	8	;volatile
   920  05FA                     l1110:
   921                           
   922                           ;stepMotor.c: 36:     ppr = num;
   923  05FA  0871               	movf	motorpasso_init@num+1,w
   924  05FB  00CE               	movwf	_ppr+1
   925  05FC  0870               	movf	motorpasso_init@num,w
   926  05FD  00CD               	movwf	_ppr
   927  05FE                     l123:
   928  05FE  0008               	return
   929  05FF                     __end_of_motorpasso_init:
   930                           
   931                           	psect	text2
   932  071A                     __ptext2:	
   933 ;; *************** function _Motorpasso *****************
   934 ;; Defined at:
   935 ;;		line 43 in file "stepMotor.c"
   936 ;; Parameters:    Size  Location     Type
   937 ;;  modo            1    wreg     unsigned char 
   938 ;;  sentido         1    4[BANK0 ] unsigned char 
   939 ;;  graus           2    5[BANK0 ] int 
   940 ;;  t               1    7[BANK0 ] unsigned char 
   941 ;; Auto vars:     Size  Location     Type
   942 ;;  modo            1    8[BANK0 ] unsigned char 
   943 ;;  i               1   10[BANK0 ] unsigned char 
   944 ;;  passo           1    9[BANK0 ] unsigned char 
   945 ;; Return value:  Size  Location     Type
   946 ;;                  1    wreg      void 
   947 ;; Registers used:
   948 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   949 ;; Tracked objects:
   950 ;;		On entry : 0/0
   951 ;;		On exit  : 0/0
   952 ;;		Unchanged: 0/0
   953 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   954 ;;      Params:         0       4       0       0       0
   955 ;;      Locals:         0       3       0       0       0
   956 ;;      Temps:          2       0       0       0       0
   957 ;;      Totals:         2       7       0       0       0
   958 ;;Total ram usage:        9 bytes
   959 ;; Hardware stack levels used: 1
   960 ;; Hardware stack levels required when called: 1
   961 ;; This function calls:
   962 ;;		___awdiv
   963 ;;		___wmul
   964 ;;		_delay
   965 ;; This function is called by:
   966 ;;		_main
   967 ;; This function uses a non-reentrant model
   968 ;;
   969                           
   970                           
   971                           ;psect for function _Motorpasso
   972  071A                     _Motorpasso:
   973                           
   974                           ;incstack = 0
   975                           ; Regs used in _Motorpasso: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   976                           ;Motorpasso@modo stored from wreg
   977  071A  1283               	bcf	3,5	;RP0=0, select bank0
   978  071B  1303               	bcf	3,6	;RP1=0, select bank0
   979  071C  00C8               	movwf	Motorpasso@modo
   980  071D                     l1112:
   981                           
   982                           ;stepMotor.c: 43: void Motorpasso (char modo ,char sentido, int graus, char t );stepMoto
      +                          r.c: 44: {;stepMotor.c: 45:     char i;;stepMotor.c: 46:     char passo = (graus * ppr)/
      +                          360;
   983  071D  3068               	movlw	104
   984  071E  00F6               	movwf	___awdiv@divisor
   985  071F  3001               	movlw	1
   986  0720  00F7               	movwf	___awdiv@divisor+1
   987  0721  0846               	movf	Motorpasso@graus+1,w
   988  0722  00F1               	movwf	___wmul@multiplier+1
   989  0723  0845               	movf	Motorpasso@graus,w
   990  0724  00F0               	movwf	___wmul@multiplier
   991  0725  084E               	movf	_ppr+1,w
   992  0726  00F3               	movwf	___wmul@multiplicand+1
   993  0727  084D               	movf	_ppr,w
   994  0728  00F2               	movwf	___wmul@multiplicand
   995  0729  120A  118A  2647  120A  118A  	fcall	___wmul
   996  072E  0871               	movf	?___wmul+1,w
   997  072F  00F9               	movwf	___awdiv@dividend+1
   998  0730  0870               	movf	?___wmul,w
   999  0731  00F8               	movwf	___awdiv@dividend
  1000  0732  120A  118A  26B1  120A  118A  	fcall	___awdiv
  1001  0737  0876               	movf	?___awdiv,w
  1002  0738  00FB               	movwf	??_Motorpasso
  1003  0739  087B               	movf	??_Motorpasso,w
  1004  073A  1283               	bcf	3,5	;RP0=0, select bank0
  1005  073B  1303               	bcf	3,6	;RP1=0, select bank0
  1006  073C  00C9               	movwf	Motorpasso@passo
  1007                           
  1008                           ;stepMotor.c: 49:     switch(modo)
  1009  073D  2FD9               	goto	l1154
  1010  073E                     l1114:
  1011                           
  1012                           ;stepMotor.c: 52:                 for(i=0; i<passo; i++)
  1013  073E  01CA               	clrf	Motorpasso@i
  1014  073F  2F60               	goto	l1124
  1015  0740                     l1116:
  1016                           
  1017                           ;stepMotor.c: 53:                 {;stepMotor.c: 54:                      aux = ( aux + 
      +                          sentido ) % 4;
  1018  0740  0844               	movf	Motorpasso@sentido,w
  1019  0741  074F               	addwf	_aux,w
  1020  0742  3903               	andlw	3
  1021  0743  00FB               	movwf	??_Motorpasso
  1022  0744  087B               	movf	??_Motorpasso,w
  1023  0745  00CF               	movwf	_aux
  1024  0746                     l1118:
  1025                           
  1026                           ;stepMotor.c: 55:                      delay(t);
  1027  0746  0847               	movf	Motorpasso@t,w
  1028  0747  00FB               	movwf	??_Motorpasso
  1029  0748  01FC               	clrf	??_Motorpasso+1
  1030  0749  087B               	movf	??_Motorpasso,w
  1031  074A  00F0               	movwf	delay@t
  1032  074B  087C               	movf	??_Motorpasso+1,w
  1033  074C  00F1               	movwf	delay@t+1
  1034  074D  120A  118A  2612  120A  118A  	fcall	_delay
  1035  0752                     l1120:
  1036                           
  1037                           ;stepMotor.c: 56:                      PORTD = (PORTD & 0xF0) | complete_step[aux];
  1038  0752  1283               	bcf	3,5	;RP0=0, select bank0
  1039  0753  1303               	bcf	3,6	;RP1=0, select bank0
  1040  0754  084F               	movf	_aux,w
  1041  0755  3E3C               	addlw	(low (_complete_step| 0))& (0+255)
  1042  0756  0084               	movwf	4
  1043  0757  0808               	movf	8,w	;volatile
  1044  0758  39F0               	andlw	240
  1045  0759  1383               	bcf	3,7	;select IRP bank0
  1046  075A  0400               	iorwf	0,w
  1047  075B  0088               	movwf	8	;volatile
  1048  075C                     l1122:
  1049                           
  1050                           ;stepMotor.c: 57:                 }
  1051  075C  3001               	movlw	1
  1052  075D  00FB               	movwf	??_Motorpasso
  1053  075E  087B               	movf	??_Motorpasso,w
  1054  075F  07CA               	addwf	Motorpasso@i,f
  1055  0760                     l1124:
  1056  0760  0849               	movf	Motorpasso@passo,w
  1057  0761  024A               	subwf	Motorpasso@i,w
  1058  0762  1C03               	skipc
  1059  0763  2F65               	goto	u581
  1060  0764  2F66               	goto	u580
  1061  0765                     u581:
  1062  0765  2F40               	goto	l1116
  1063  0766                     u580:
  1064  0766  2FEC               	goto	l140
  1065  0767                     l1126:
  1066                           
  1067                           ;stepMotor.c: 61:                 for(i=0; i<passo; i++)
  1068  0767  01CA               	clrf	Motorpasso@i
  1069  0768  2F89               	goto	l1136
  1070  0769                     l1128:
  1071                           
  1072                           ;stepMotor.c: 62:                 {;stepMotor.c: 63:                      aux = ( aux + 
      +                          sentido ) % 4;
  1073  0769  0844               	movf	Motorpasso@sentido,w
  1074  076A  074F               	addwf	_aux,w
  1075  076B  3903               	andlw	3
  1076  076C  00FB               	movwf	??_Motorpasso
  1077  076D  087B               	movf	??_Motorpasso,w
  1078  076E  00CF               	movwf	_aux
  1079  076F                     l1130:
  1080                           
  1081                           ;stepMotor.c: 64:                      delay(t);
  1082  076F  0847               	movf	Motorpasso@t,w
  1083  0770  00FB               	movwf	??_Motorpasso
  1084  0771  01FC               	clrf	??_Motorpasso+1
  1085  0772  087B               	movf	??_Motorpasso,w
  1086  0773  00F0               	movwf	delay@t
  1087  0774  087C               	movf	??_Motorpasso+1,w
  1088  0775  00F1               	movwf	delay@t+1
  1089  0776  120A  118A  2612  120A  118A  	fcall	_delay
  1090  077B                     l1132:
  1091                           
  1092                           ;stepMotor.c: 65:                      PORTD = (PORTD & 0xF0) | double_step[aux];
  1093  077B  1283               	bcf	3,5	;RP0=0, select bank0
  1094  077C  1303               	bcf	3,6	;RP1=0, select bank0
  1095  077D  084F               	movf	_aux,w
  1096  077E  3E38               	addlw	(low (_double_step| 0))& (0+255)
  1097  077F  0084               	movwf	4
  1098  0780  0808               	movf	8,w	;volatile
  1099  0781  39F0               	andlw	240
  1100  0782  1383               	bcf	3,7	;select IRP bank0
  1101  0783  0400               	iorwf	0,w
  1102  0784  0088               	movwf	8	;volatile
  1103  0785                     l1134:
  1104                           
  1105                           ;stepMotor.c: 66:                 }
  1106  0785  3001               	movlw	1
  1107  0786  00FB               	movwf	??_Motorpasso
  1108  0787  087B               	movf	??_Motorpasso,w
  1109  0788  07CA               	addwf	Motorpasso@i,f
  1110  0789                     l1136:
  1111  0789  0849               	movf	Motorpasso@passo,w
  1112  078A  024A               	subwf	Motorpasso@i,w
  1113  078B  1C03               	skipc
  1114  078C  2F8E               	goto	u591
  1115  078D  2F8F               	goto	u590
  1116  078E                     u591:
  1117  078E  2F69               	goto	l1128
  1118  078F                     u590:
  1119  078F  2FEC               	goto	l140
  1120  0790                     l1138:
  1121                           
  1122                           ;stepMotor.c: 70:                 passo = (graus * ppr)/180;
  1123  0790  30B4               	movlw	180
  1124  0791  00F6               	movwf	___awdiv@divisor
  1125  0792  3000               	movlw	0
  1126  0793  00F7               	movwf	___awdiv@divisor+1
  1127  0794  0846               	movf	Motorpasso@graus+1,w
  1128  0795  00F1               	movwf	___wmul@multiplier+1
  1129  0796  0845               	movf	Motorpasso@graus,w
  1130  0797  00F0               	movwf	___wmul@multiplier
  1131  0798  084E               	movf	_ppr+1,w
  1132  0799  00F3               	movwf	___wmul@multiplicand+1
  1133  079A  084D               	movf	_ppr,w
  1134  079B  00F2               	movwf	___wmul@multiplicand
  1135  079C  120A  118A  2647  120A  118A  	fcall	___wmul
  1136  07A1  0871               	movf	?___wmul+1,w
  1137  07A2  00F9               	movwf	___awdiv@dividend+1
  1138  07A3  0870               	movf	?___wmul,w
  1139  07A4  00F8               	movwf	___awdiv@dividend
  1140  07A5  120A  118A  26B1  120A  118A  	fcall	___awdiv
  1141  07AA  0876               	movf	?___awdiv,w
  1142  07AB  00FB               	movwf	??_Motorpasso
  1143  07AC  087B               	movf	??_Motorpasso,w
  1144  07AD  1283               	bcf	3,5	;RP0=0, select bank0
  1145  07AE  1303               	bcf	3,6	;RP1=0, select bank0
  1146  07AF  00C9               	movwf	Motorpasso@passo
  1147  07B0                     l1140:
  1148                           
  1149                           ;stepMotor.c: 72:                 for(i=0; i<passo; i++)
  1150  07B0  01CA               	clrf	Motorpasso@i
  1151  07B1  2FD2               	goto	l1150
  1152  07B2                     l1142:
  1153                           
  1154                           ;stepMotor.c: 73:                 {;stepMotor.c: 74:                      aux = ( aux + 
      +                          sentido ) % 8;
  1155  07B2  0844               	movf	Motorpasso@sentido,w
  1156  07B3  074F               	addwf	_aux,w
  1157  07B4  3907               	andlw	7
  1158  07B5  00FB               	movwf	??_Motorpasso
  1159  07B6  087B               	movf	??_Motorpasso,w
  1160  07B7  00CF               	movwf	_aux
  1161  07B8                     l1144:
  1162                           
  1163                           ;stepMotor.c: 75:                      delay(t);
  1164  07B8  0847               	movf	Motorpasso@t,w
  1165  07B9  00FB               	movwf	??_Motorpasso
  1166  07BA  01FC               	clrf	??_Motorpasso+1
  1167  07BB  087B               	movf	??_Motorpasso,w
  1168  07BC  00F0               	movwf	delay@t
  1169  07BD  087C               	movf	??_Motorpasso+1,w
  1170  07BE  00F1               	movwf	delay@t+1
  1171  07BF  120A  118A  2612  120A  118A  	fcall	_delay
  1172  07C4                     l1146:
  1173                           
  1174                           ;stepMotor.c: 76:                      PORTD = (PORTD & 0xF0) | half_step[aux];
  1175  07C4  1283               	bcf	3,5	;RP0=0, select bank0
  1176  07C5  1303               	bcf	3,6	;RP1=0, select bank0
  1177  07C6  084F               	movf	_aux,w
  1178  07C7  3E30               	addlw	(low (_half_step| 0))& (0+255)
  1179  07C8  0084               	movwf	4
  1180  07C9  0808               	movf	8,w	;volatile
  1181  07CA  39F0               	andlw	240
  1182  07CB  1383               	bcf	3,7	;select IRP bank0
  1183  07CC  0400               	iorwf	0,w
  1184  07CD  0088               	movwf	8	;volatile
  1185  07CE                     l1148:
  1186                           
  1187                           ;stepMotor.c: 77:                 }
  1188  07CE  3001               	movlw	1
  1189  07CF  00FB               	movwf	??_Motorpasso
  1190  07D0  087B               	movf	??_Motorpasso,w
  1191  07D1  07CA               	addwf	Motorpasso@i,f
  1192  07D2                     l1150:
  1193  07D2  0849               	movf	Motorpasso@passo,w
  1194  07D3  024A               	subwf	Motorpasso@i,w
  1195  07D4  1C03               	skipc
  1196  07D5  2FD7               	goto	u601
  1197  07D6  2FD8               	goto	u600
  1198  07D7                     u601:
  1199  07D7  2FB2               	goto	l1142
  1200  07D8                     u600:
  1201  07D8  2FEC               	goto	l140
  1202  07D9                     l1154:
  1203  07D9  0848               	movf	Motorpasso@modo,w
  1204  07DA  00FB               	movwf	??_Motorpasso
  1205  07DB  01FC               	clrf	??_Motorpasso+1
  1206                           
  1207                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1208                           ; Switch size 1, requested type "simple"
  1209                           ; Number of cases is 1, Range of values is 0 to 0
  1210                           ; switch strategies available:
  1211                           ; Name         Instructions Cycles
  1212                           ; simple_byte            4     3 (average)
  1213                           ; direct_byte           11     8 (fixed)
  1214                           ; jumptable            260     6 (fixed)
  1215                           ;	Chosen strategy is simple_byte
  1216  07DC  087C               	movf	??_Motorpasso+1,w
  1217  07DD  3A00               	xorlw	0	; case 0
  1218  07DE  1903               	skipnz
  1219  07DF  2FE1               	goto	l1226
  1220  07E0  2FEC               	goto	l140
  1221  07E1                     l1226:
  1222                           
  1223                           ; Switch size 1, requested type "simple"
  1224                           ; Number of cases is 3, Range of values is 10 to 20
  1225                           ; switch strategies available:
  1226                           ; Name         Instructions Cycles
  1227                           ; simple_byte           10     6 (average)
  1228                           ; direct_byte           44    11 (fixed)
  1229                           ; jumptable            263     9 (fixed)
  1230                           ;	Chosen strategy is simple_byte
  1231  07E1  087B               	movf	??_Motorpasso,w
  1232  07E2  3A0A               	xorlw	10	; case 10
  1233  07E3  1903               	skipnz
  1234  07E4  2F3E               	goto	l1114
  1235  07E5  3A05               	xorlw	5	; case 15
  1236  07E6  1903               	skipnz
  1237  07E7  2F67               	goto	l1126
  1238  07E8  3A1B               	xorlw	27	; case 20
  1239  07E9  1903               	skipnz
  1240  07EA  2F90               	goto	l1138
  1241  07EB  2FEC               	goto	l140
  1242  07EC                     l140:
  1243  07EC  0008               	return
  1244  07ED                     __end_of_Motorpasso:
  1245                           
  1246                           	psect	text3
  1247  0612                     __ptext3:	
  1248 ;; *************** function _delay *****************
  1249 ;; Defined at:
  1250 ;;		line 13 in file "delay.c"
  1251 ;; Parameters:    Size  Location     Type
  1252 ;;  t               2    0[COMMON] int 
  1253 ;; Auto vars:     Size  Location     Type
  1254 ;;		None
  1255 ;; Return value:  Size  Location     Type
  1256 ;;                  1    wreg      void 
  1257 ;; Registers used:
  1258 ;;		wreg, status,2, status,0
  1259 ;; Tracked objects:
  1260 ;;		On entry : 0/0
  1261 ;;		On exit  : 0/0
  1262 ;;		Unchanged: 0/0
  1263 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1264 ;;      Params:         2       0       0       0       0
  1265 ;;      Locals:         0       0       0       0       0
  1266 ;;      Temps:          1       0       0       0       0
  1267 ;;      Totals:         3       0       0       0       0
  1268 ;;Total ram usage:        3 bytes
  1269 ;; Hardware stack levels used: 1
  1270 ;; This function calls:
  1271 ;;		Nothing
  1272 ;; This function is called by:
  1273 ;;		_main
  1274 ;;		_Motorpasso
  1275 ;; This function uses a non-reentrant model
  1276 ;;
  1277                           
  1278                           
  1279                           ;psect for function _delay
  1280  0612                     _delay:
  1281  0612                     l1042:	
  1282                           ;incstack = 0
  1283                           ; Regs used in _delay: [wreg+status,2+status,0]
  1284                           
  1285                           
  1286                           ;delay.c: 13: void delay (int t );delay.c: 14: {;delay.c: 15:     while ( t )
  1287  0612  2E20               	goto	l1046
  1288  0613                     l1044:
  1289                           
  1290                           ;delay.c: 16:     {;delay.c: 17:         _delay((unsigned long)((1)*(4000000/4000.0)));
  1291  0613  30C7               	movlw	199
  1292  0614  00F2               	movwf	??_delay
  1293  0615                     u707:
  1294  0615  2E16               	nop2
  1295  0616  0BF2               	decfsz	??_delay,f
  1296  0617  2E15               	goto	u707
  1297  0618  2E19               	nop2
  1298  0619  2E1A               	nop2
  1299                           
  1300                           ;delay.c: 18:         --t;
  1301  061A  30FF               	movlw	255
  1302  061B  07F0               	addwf	delay@t,f
  1303  061C  1803               	skipnc
  1304  061D  0AF1               	incf	delay@t+1,f
  1305  061E  30FF               	movlw	255
  1306  061F  07F1               	addwf	delay@t+1,f
  1307  0620                     l1046:
  1308                           
  1309                           ;delay.c: 15:     while ( t )
  1310  0620  0870               	movf	delay@t,w
  1311  0621  0471               	iorwf	delay@t+1,w
  1312  0622  1D03               	btfss	3,2
  1313  0623  2E25               	goto	u431
  1314  0624  2E26               	goto	u430
  1315  0625                     u431:
  1316  0625  2E13               	goto	l1044
  1317  0626                     u430:
  1318  0626                     l22:
  1319  0626  0008               	return
  1320  0627                     __end_of_delay:
  1321                           
  1322                           	psect	text4
  1323  0647                     __ptext4:	
  1324 ;; *************** function ___wmul *****************
  1325 ;; Defined at:
  1326 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\Umul16.c"
  1327 ;; Parameters:    Size  Location     Type
  1328 ;;  multiplier      2    0[COMMON] unsigned int 
  1329 ;;  multiplicand    2    2[COMMON] unsigned int 
  1330 ;; Auto vars:     Size  Location     Type
  1331 ;;  product         2    4[COMMON] unsigned int 
  1332 ;; Return value:  Size  Location     Type
  1333 ;;                  2    0[COMMON] unsigned int 
  1334 ;; Registers used:
  1335 ;;		wreg, status,2, status,0
  1336 ;; Tracked objects:
  1337 ;;		On entry : 0/0
  1338 ;;		On exit  : 0/0
  1339 ;;		Unchanged: 0/0
  1340 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1341 ;;      Params:         4       0       0       0       0
  1342 ;;      Locals:         2       0       0       0       0
  1343 ;;      Temps:          0       0       0       0       0
  1344 ;;      Totals:         6       0       0       0       0
  1345 ;;Total ram usage:        6 bytes
  1346 ;; Hardware stack levels used: 1
  1347 ;; This function calls:
  1348 ;;		Nothing
  1349 ;; This function is called by:
  1350 ;;		_Motorpasso
  1351 ;; This function uses a non-reentrant model
  1352 ;;
  1353                           
  1354                           
  1355                           ;psect for function ___wmul
  1356  0647                     ___wmul:
  1357  0647                     l1048:	
  1358                           ;incstack = 0
  1359                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1360                           
  1361  0647  01F4               	clrf	___wmul@product
  1362  0648  01F5               	clrf	___wmul@product+1
  1363  0649                     l1050:
  1364  0649  1C70               	btfss	___wmul@multiplier,0
  1365  064A  2E4C               	goto	u441
  1366  064B  2E4D               	goto	u440
  1367  064C                     u441:
  1368  064C  2E53               	goto	l226
  1369  064D                     u440:
  1370  064D                     l1052:
  1371  064D  0872               	movf	___wmul@multiplicand,w
  1372  064E  07F4               	addwf	___wmul@product,f
  1373  064F  1803               	skipnc
  1374  0650  0AF5               	incf	___wmul@product+1,f
  1375  0651  0873               	movf	___wmul@multiplicand+1,w
  1376  0652  07F5               	addwf	___wmul@product+1,f
  1377  0653                     l226:
  1378  0653  3001               	movlw	1
  1379  0654                     u455:
  1380  0654  1003               	clrc
  1381  0655  0DF2               	rlf	___wmul@multiplicand,f
  1382  0656  0DF3               	rlf	___wmul@multiplicand+1,f
  1383  0657  3EFF               	addlw	-1
  1384  0658  1D03               	skipz
  1385  0659  2E54               	goto	u455
  1386  065A                     l1054:
  1387  065A  3001               	movlw	1
  1388  065B                     u465:
  1389  065B  1003               	clrc
  1390  065C  0CF1               	rrf	___wmul@multiplier+1,f
  1391  065D  0CF0               	rrf	___wmul@multiplier,f
  1392  065E  3EFF               	addlw	-1
  1393  065F  1D03               	skipz
  1394  0660  2E5B               	goto	u465
  1395  0661                     l1056:
  1396  0661  0870               	movf	___wmul@multiplier,w
  1397  0662  0471               	iorwf	___wmul@multiplier+1,w
  1398  0663  1D03               	btfss	3,2
  1399  0664  2E66               	goto	u471
  1400  0665  2E67               	goto	u470
  1401  0666                     u471:
  1402  0666  2E49               	goto	l1050
  1403  0667                     u470:
  1404  0667                     l1058:
  1405  0667  0875               	movf	___wmul@product+1,w
  1406  0668  00F1               	movwf	?___wmul+1
  1407  0669  0874               	movf	___wmul@product,w
  1408  066A  00F0               	movwf	?___wmul
  1409  066B                     l228:
  1410  066B  0008               	return
  1411  066C                     __end_of___wmul:
  1412                           
  1413                           	psect	text5
  1414  06B1                     __ptext5:	
  1415 ;; *************** function ___awdiv *****************
  1416 ;; Defined at:
  1417 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awdiv.c"
  1418 ;; Parameters:    Size  Location     Type
  1419 ;;  divisor         2    6[COMMON] int 
  1420 ;;  dividend        2    8[COMMON] int 
  1421 ;; Auto vars:     Size  Location     Type
  1422 ;;  quotient        2    2[BANK0 ] int 
  1423 ;;  sign            1    1[BANK0 ] unsigned char 
  1424 ;;  counter         1    0[BANK0 ] unsigned char 
  1425 ;; Return value:  Size  Location     Type
  1426 ;;                  2    6[COMMON] int 
  1427 ;; Registers used:
  1428 ;;		wreg, status,2, status,0
  1429 ;; Tracked objects:
  1430 ;;		On entry : 0/0
  1431 ;;		On exit  : 0/0
  1432 ;;		Unchanged: 0/0
  1433 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1434 ;;      Params:         4       0       0       0       0
  1435 ;;      Locals:         0       4       0       0       0
  1436 ;;      Temps:          1       0       0       0       0
  1437 ;;      Totals:         5       4       0       0       0
  1438 ;;Total ram usage:        9 bytes
  1439 ;; Hardware stack levels used: 1
  1440 ;; This function calls:
  1441 ;;		Nothing
  1442 ;; This function is called by:
  1443 ;;		_Motorpasso
  1444 ;;		_dispLCD_num
  1445 ;; This function uses a non-reentrant model
  1446 ;;
  1447                           
  1448                           
  1449                           ;psect for function ___awdiv
  1450  06B1                     ___awdiv:
  1451  06B1                     l1062:	
  1452                           ;incstack = 0
  1453                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1454                           
  1455  06B1  1283               	bcf	3,5	;RP0=0, select bank0
  1456  06B2  1303               	bcf	3,6	;RP1=0, select bank0
  1457  06B3  01C1               	clrf	___awdiv@sign
  1458  06B4                     l1064:
  1459  06B4  1FF7               	btfss	___awdiv@divisor+1,7
  1460  06B5  2EB7               	goto	u481
  1461  06B6  2EB8               	goto	u480
  1462  06B7                     u481:
  1463  06B7  2EBF               	goto	l1070
  1464  06B8                     u480:
  1465  06B8                     l1066:
  1466  06B8  09F6               	comf	___awdiv@divisor,f
  1467  06B9  09F7               	comf	___awdiv@divisor+1,f
  1468  06BA  0AF6               	incf	___awdiv@divisor,f
  1469  06BB  1903               	skipnz
  1470  06BC  0AF7               	incf	___awdiv@divisor+1,f
  1471  06BD                     l1068:
  1472  06BD  01C1               	clrf	___awdiv@sign
  1473  06BE  0AC1               	incf	___awdiv@sign,f
  1474  06BF                     l1070:
  1475  06BF  1FF9               	btfss	___awdiv@dividend+1,7
  1476  06C0  2EC2               	goto	u491
  1477  06C1  2EC3               	goto	u490
  1478  06C2                     u491:
  1479  06C2  2ECC               	goto	l1076
  1480  06C3                     u490:
  1481  06C3                     l1072:
  1482  06C3  09F8               	comf	___awdiv@dividend,f
  1483  06C4  09F9               	comf	___awdiv@dividend+1,f
  1484  06C5  0AF8               	incf	___awdiv@dividend,f
  1485  06C6  1903               	skipnz
  1486  06C7  0AF9               	incf	___awdiv@dividend+1,f
  1487  06C8                     l1074:
  1488  06C8  3001               	movlw	1
  1489  06C9  00FA               	movwf	??___awdiv
  1490  06CA  087A               	movf	??___awdiv,w
  1491  06CB  06C1               	xorwf	___awdiv@sign,f
  1492  06CC                     l1076:
  1493  06CC  01C2               	clrf	___awdiv@quotient
  1494  06CD  01C3               	clrf	___awdiv@quotient+1
  1495  06CE                     l1078:
  1496  06CE  0876               	movf	___awdiv@divisor,w
  1497  06CF  0477               	iorwf	___awdiv@divisor+1,w
  1498  06D0  1903               	btfsc	3,2
  1499  06D1  2ED3               	goto	u501
  1500  06D2  2ED4               	goto	u500
  1501  06D3                     u501:
  1502  06D3  2F0B               	goto	l1098
  1503  06D4                     u500:
  1504  06D4                     l1080:
  1505  06D4  01C0               	clrf	___awdiv@counter
  1506  06D5  0AC0               	incf	___awdiv@counter,f
  1507  06D6  2EE2               	goto	l1086
  1508  06D7                     l1082:
  1509  06D7  3001               	movlw	1
  1510  06D8                     u515:
  1511  06D8  1003               	clrc
  1512  06D9  0DF6               	rlf	___awdiv@divisor,f
  1513  06DA  0DF7               	rlf	___awdiv@divisor+1,f
  1514  06DB  3EFF               	addlw	-1
  1515  06DC  1D03               	skipz
  1516  06DD  2ED8               	goto	u515
  1517  06DE                     l1084:
  1518  06DE  3001               	movlw	1
  1519  06DF  00FA               	movwf	??___awdiv
  1520  06E0  087A               	movf	??___awdiv,w
  1521  06E1  07C0               	addwf	___awdiv@counter,f
  1522  06E2                     l1086:
  1523  06E2  1FF7               	btfss	___awdiv@divisor+1,7
  1524  06E3  2EE5               	goto	u521
  1525  06E4  2EE6               	goto	u520
  1526  06E5                     u521:
  1527  06E5  2ED7               	goto	l1082
  1528  06E6                     u520:
  1529  06E6                     l1088:
  1530  06E6  3001               	movlw	1
  1531  06E7                     u535:
  1532  06E7  1003               	clrc
  1533  06E8  0DC2               	rlf	___awdiv@quotient,f
  1534  06E9  0DC3               	rlf	___awdiv@quotient+1,f
  1535  06EA  3EFF               	addlw	-1
  1536  06EB  1D03               	skipz
  1537  06EC  2EE7               	goto	u535
  1538  06ED  0877               	movf	___awdiv@divisor+1,w
  1539  06EE  0279               	subwf	___awdiv@dividend+1,w
  1540  06EF  1D03               	skipz
  1541  06F0  2EF3               	goto	u545
  1542  06F1  0876               	movf	___awdiv@divisor,w
  1543  06F2  0278               	subwf	___awdiv@dividend,w
  1544  06F3                     u545:
  1545  06F3  1C03               	skipc
  1546  06F4  2EF6               	goto	u541
  1547  06F5  2EF7               	goto	u540
  1548  06F6                     u541:
  1549  06F6  2EFE               	goto	l1094
  1550  06F7                     u540:
  1551  06F7                     l1090:
  1552  06F7  0876               	movf	___awdiv@divisor,w
  1553  06F8  02F8               	subwf	___awdiv@dividend,f
  1554  06F9  0877               	movf	___awdiv@divisor+1,w
  1555  06FA  1C03               	skipc
  1556  06FB  03F9               	decf	___awdiv@dividend+1,f
  1557  06FC  02F9               	subwf	___awdiv@dividend+1,f
  1558  06FD                     l1092:
  1559  06FD  1442               	bsf	___awdiv@quotient,0
  1560  06FE                     l1094:
  1561  06FE  3001               	movlw	1
  1562  06FF                     u555:
  1563  06FF  1003               	clrc
  1564  0700  0CF7               	rrf	___awdiv@divisor+1,f
  1565  0701  0CF6               	rrf	___awdiv@divisor,f
  1566  0702  3EFF               	addlw	-1
  1567  0703  1D03               	skipz
  1568  0704  2EFF               	goto	u555
  1569  0705                     l1096:
  1570  0705  3001               	movlw	1
  1571  0706  02C0               	subwf	___awdiv@counter,f
  1572  0707  1D03               	btfss	3,2
  1573  0708  2F0A               	goto	u561
  1574  0709  2F0B               	goto	u560
  1575  070A                     u561:
  1576  070A  2EE6               	goto	l1088
  1577  070B                     u560:
  1578  070B                     l1098:
  1579  070B  0841               	movf	___awdiv@sign,w
  1580  070C  1903               	btfsc	3,2
  1581  070D  2F0F               	goto	u571
  1582  070E  2F10               	goto	u570
  1583  070F                     u571:
  1584  070F  2F15               	goto	l1102
  1585  0710                     u570:
  1586  0710                     l1100:
  1587  0710  09C2               	comf	___awdiv@quotient,f
  1588  0711  09C3               	comf	___awdiv@quotient+1,f
  1589  0712  0AC2               	incf	___awdiv@quotient,f
  1590  0713  1903               	skipnz
  1591  0714  0AC3               	incf	___awdiv@quotient+1,f
  1592  0715                     l1102:
  1593  0715  0843               	movf	___awdiv@quotient+1,w
  1594  0716  00F7               	movwf	?___awdiv+1
  1595  0717  0842               	movf	___awdiv@quotient,w
  1596  0718  00F6               	movwf	?___awdiv
  1597  0719                     l379:
  1598  0719  0008               	return
  1599  071A                     __end_of___awdiv:
  1600  007E                     btemp	set	126	;btemp
  1601  007E                     wtemp0	set	126
  1602                           
  1603                           	psect	config
  1604                           
  1605                           ;Config register CONFIG1 @ 0x2007
  1606                           ;	Oscillator Selection bits
  1607                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1608                           ;	Watchdog Timer Enable bit
  1609                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1610                           ;	Power-up Timer Enable bit
  1611                           ;	PWRTE = OFF, PWRT disabled
  1612                           ;	RE3/MCLR pin function select bit
  1613                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1614                           ;	Code Protection bit
  1615                           ;	CP = OFF, Program memory code protection is disabled
  1616                           ;	Data Code Protection bit
  1617                           ;	CPD = OFF, Data memory code protection is disabled
  1618                           ;	Brown Out Reset Selection bits
  1619                           ;	BOREN = OFF, BOR disabled
  1620                           ;	Internal External Switchover bit
  1621                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1622                           ;	Fail-Safe Clock Monitor Enabled bit
  1623                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1624                           ;	Low Voltage Programming Enable bit
  1625                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1626                           ;	In-Circuit Debugger Mode bit
  1627                           ;	DEBUG = 0x1, unprogrammed default
  1628  2007                     	org	8199
  1629  2007  20D4               	dw	8404
  1630                           
  1631                           ;Config register CONFIG2 @ 0x2008
  1632                           ;	Brown-out Reset Selection bit
  1633                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1634                           ;	Flash Program Memory Self Write Enable bits
  1635                           ;	WRT = OFF, Write protection off
  1636  2008                     	org	8200
  1637  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        32
    BSS         1
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      13
    BANK0            80     13      48
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_Motorpasso
    _Motorpasso->___awdiv
    ___awdiv->___wmul

Critical Paths under _main in BANK0

    _main->_Motorpasso
    _Motorpasso->___awdiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    3306
                                             11 BANK0      2     2      0
                         _Motorpasso
                              _delay
                    _motorpasso_init
 ---------------------------------------------------------------------------------
 (1) _motorpasso_init                                      2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _Motorpasso                                           9     5      4    2805
                                             11 COMMON     2     2      0
                                              4 BANK0      7     3      4
                            ___awdiv
                             ___wmul
                              _delay
 ---------------------------------------------------------------------------------
 (1) _delay                                                3     1      2     403
                                              0 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     396
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4    1212
                                              6 COMMON     5     1      4
                                              0 BANK0      4     4      0
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Motorpasso
     ___awdiv
       ___wmul (ARG)
     ___wmul
     _delay
   _delay
   _motorpasso_init

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      D      30       5       60.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      D       D       1       92.9%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      3D      12        0.0%
ABS                  0      0      3D       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Thu Jun 03 20:52:49 2021

                       pc 0002                        l22 0626              ___awdiv@sign 0041  
                      fsr 0004       ___wmul@multiplicand 0072             _complete_step 003C  
                     l123 05FE                       l140 07EC                       l226 0653  
                     l228 066B                       l379 0719                       u500 06D4  
                     u501 06D3                       u430 0626                       u431 0625  
                     u520 06E6                       u440 064D                       u600 07D8  
                     u521 06E5                       u441 064C                       u601 07D7  
                     u515 06D8                       u540 06F7                       u541 06F6  
                     u470 0667                       u535 06E7                       u471 0666  
                     u455 0654                       u560 070B                       u480 06B8  
                     u561 070A                       u545 06F3                       u481 06B7  
                     u465 065B                       u570 0710                       u490 06C3  
                     u571 070F                       u555 06FF                       u491 06C2  
                     u707 0615                       u580 0766                       u581 0765  
                     u590 078F                       u591 078E                       _aux 004F  
                     _ppr 004D                       fsr0 0004                       indf 0000  
                    l1100 0710                      l1102 0715                      l1110 05FA  
                    l1120 0752                      l1112 071D                      l1050 0649  
                    l1042 0612                      l1130 076F                      l1122 075C  
                    l1114 073E                      l1106 05F1                      l1052 064D  
                    l1044 0613                      l1140 07B0                      l1132 077B  
                    l1116 0740                      l1124 0760                      l1108 05F7  
                    l1070 06BF                      l1062 06B1                      l1054 065A  
                    l1046 0620                      l1142 07B2                      l1150 07D2  
                    l1134 0785                      l1126 0767                      l1118 0746  
                    l1080 06D4                      l1072 06C3                      l1064 06B4  
                    l1056 0661                      l1048 0647                      l1144 07B8  
                    l1128 0769                      l1136 0789                      l1160 066C  
                    l1090 06F7                      l1082 06D7                      l1074 06C8  
                    l1066 06B8                      l1058 0667                      l1226 07E1  
                    l1146 07C4                      l1138 0790                      l1154 07D9  
                    l1162 0675                      l1092 06FD                      l1084 06DE  
                    l1076 06CC                      l1068 06BD                      l1148 07CE  
                    l1164 0687                      l1094 06FE                      l1086 06E2  
                    l1078 06CE                      l1166 06A4                      l1096 0705  
                    l1088 06E6                      l1098 070B                      _WPUB 0095  
                    _main 066C         Motorpasso@sentido 0044                      btemp 007E  
                    start 0000                     ?_main 0070           __end_of___awdiv 071A  
         ___awdiv@divisor 0076           ___awdiv@counter 0040                     _PORTB 0006  
                   _PORTD 0008                     _TRISB 0086                     _delay 0612  
                   pclath 000A                     status 0003                     wtemp0 007E  
         __initialization 07ED              __end_of_main 06B1         ??_motorpasso_init 0072  
                  ??_main 004B                    ?_delay 0070          ___awdiv@dividend 0078  
                  _ANSELH 0189                    ___wmul 0647                 ??___awdiv 007A  
              _Motorpasso 071A                    delay@t 0070          ___awdiv@quotient 0042  
 __end_of__initialization 07FC            Motorpasso@modo 0048            __pcstackCOMMON 0070  
            __pidataBANK0 0627             __end_of_delay 0627            _OPTION_REGbits 0081  
                 ??_delay 0072                __pbssBANK0 004F                __pmaintext 066C  
                 ?___wmul 0070               ?_Motorpasso 0044                   _LCDbits 0008  
         _motorpasso_init 05F1               Motorpasso@i 004A                   ___awdiv 06B1  
             Motorpasso@t 0047           __size_of___wmul 0025                   __ptext1 05F1  
                 __ptext2 071A                   __ptext3 0612                   __ptext4 0647  
                 __ptext5 06B1      end_of_initialization 07FC       __size_of_Motorpasso 00D3  
               _TRISDbits 0088   __end_of_motorpasso_init 05FF           Motorpasso@graus 0045  
         Motorpasso@passo 0049            __end_of___wmul 066C       start_initialization 07ED  
           _tecladoMatriz 0020                  ??___wmul 0074                init_fetch0 05FF  
            ??_Motorpasso 007B               __pdataBANK0 0020                 ___latbits 0002  
           __pcstackBANK0 0040          ?_motorpasso_init 0070        __end_of_Motorpasso 07ED  
               __pnvBANK0 004D                 _half_step 0030                  ?___awdiv 0076  
          __size_of_delay 0015            ___wmul@product 0074         ___wmul@multiplier 0070  
             _double_step 0038          __size_of___awdiv 0069             __size_of_main 0045  
      motorpasso_init@num 0070                  init_ram0 0603  __size_of_motorpasso_init 000E  
